pipeline {

    agent any

    parameters {

        choice(name: 'DIRECTION', choices: ['dev-to-prod', 'prod-to-dev'], description: 'Select direction')

    }

    environment {

        REPO = 'https://github.com/your-org/your-repo.git'

    }

    stages {

        stage('Checkout') {

            steps {

                script {

                    def branch = params.DIRECTION == 'dev-to-prod' ? 'dev' : 'prod'

                    git branch: branch, url: "${env.REPO}"

                }

            }

        }

        // ========== PROD to DEV ==========

        stage('Export from Prod to Local') {

            when {

                expression { params.DIRECTION == 'prod-to-dev' }

            }

            steps {

                sh '''

                    echo "Exporting resources from PROD..."

                    chmod +x scripts/export_from_prod.sh

                    ./scripts/export_from_prod.sh

                '''

            }

        }

        stage('Push Export to Dev Branch') {

            when {

                expression { params.DIRECTION == 'prod-to-dev' }

            }

            steps {

                sh '''

                    echo "Committing export to dev branch"

                    git checkout dev

                    git add .

                    git config user.name "CI BOT"

                    git config user.email "ci@example.com"

                    git commit -m "Synced PROD to DEV"

                    git push origin dev

                '''

            }

        }

        // ========== DEV to PROD ==========

        stage('Terraform Init (Dev to Prod)') {

            when {

                expression { params.DIRECTION == 'dev-to-prod' }

            }

            steps {

                sh 'terraform init -backend-config=prod-backend.hcl'

            }

        }

        stage('Terraform Plan (Dev to Prod)') {

            when {

                expression { params.DIRECTION == 'dev-to-prod' }

            }

            steps {

                sh 'terraform plan -var="environment=prod"'

            }

        }

        stage('Approval (Dev to Prod)') {

            when {

                expression { params.DIRECTION == 'dev-to-prod' }

            }

            steps {

                input message: 'Approve deployment to PROD?'

            }

        }

        stage('Terraform Apply (Dev to Prod)') {

            when {

                expression { params.DIRECTION == 'dev-to-prod' }

            }

            steps {

                sh 'terraform apply -auto-approve -var="environment=prod"'

            }

        }

    }

}
 